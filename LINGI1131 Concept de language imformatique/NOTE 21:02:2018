--Note du cours de "Concept de language informatique"
-- 21 Février 2018
-- LINGI 1131
-- Valentin Haveaux

Contenu du cours: ° Deterministic dataflow
                    (chapitre 4 du cours)
                    1)
                      --> Single assignement varaiables
                      --> Partial values
                      --> dataflow principe
                    2)
                      --> Concurrencu and threads
                      --> Semanties
                      --> Execution tree
                    3)
                      --> Streams
                      --> Ping-pong example
                      --> Agents

° dataflow
  - variability of data
          _________
      --> |       |   -->
      --> |       |
    data  ---------
          Operation

  - Single assignement
                            memory
    [ Declare            ###################
    [ X  ------------------>x              #
                         #                 #
                         #                 #
                         ###################
  - Potentiel values -->
    Value --> instant
              L=[1 2 3]

  - Dataflow concept

    Statement exec
    | | | | |
    v v v v v
    ________
    declare ] addition "X" wairs for X
    Y=X+1   ]
      |
      |
      v
    unbound

  - Activity or "thread"
    - statement in Execution
    - statement can wait if data is unavailable   --> Continues when data becomes available
    - Multiple statement in exec program

  X=100   --> statement exec


    declare
    X
    {Browse X}
    X=100
    X=101

    declare A B C L in
    L=[A B C]
    {Browse L}

    declare X Y in
    Y=X+1
    {Browse Y}

    X=999

  - threads
    - thread = statement in execution
    - thread <s> end  create a new thread
    - multiple threads --> all execute "simultanely"
    - execution uses 'interleaning semantics'
                  S0 S1 S2 S3 <-- steps
      thread T0 --|--|--|--|--|--> time

                  S0° S1° S2° S3°
      thread T1 --|---|---|---|--|-->

  - System
    - execution both threads  ] eany do reason
    - one sequence of steps   ] about concurrent execution
       S0  S0° S1° S1 S2° S2  S3
    ---|---|---|---|--|---|---|--|-->

    - Concurrency does not imply paralletion
      (multiple threads)    (true simult execution)
      large var number      small, fixed
      no.                   no.

    - every Step: choice of whitch thread
    - two instances varaiables
      - 2 execution of trame program can have different arder of steps
      - results of program? Might be different!!!
      - Advantage of data dataflow:
          #######################
          ## PAS REUSSI A LIRE ##
          ##   DEUX AVANTAGES  ##
          #######################

  - Execution tree
    - Show all possible execution
      (all possible choices of schedules)
  ######################
  #  declare A B C in  #
  #  thread A=1 end    #
  #  thread B=2 end    #
  #  thread C=A+B end  #
  ######################

  inght ######################  memory
        #  declare A B C in  #
        #  thread A=1 end    #
        #  thread B=2 end    #
        #  thread C=A+B end  #
   T0   ######################
                || Step 1
                VV
        ######################
          then A=1 end          {a,b,c}
          then
          then
  T0    ######################
                ||
                VV
        ######################
  T1      A=1                   {a,b,c}
        ######################
                ||
                VV
        ######################
         then
  T0     then
        ######################
          //                \\
        vv                   vv
    ###########             ############
    then        {a=1,b,c}    A=1
    then                  T1############
 T1 ###########             ############    {a,b,c}
                             B=2
                          T2############
                            ############
                            then C=A+B
                          T0############
                            //  ||  \\
            -----------------   ||   -----------------
            |                   ||                   |
            V                   vv                   V
                                                T1  A=1
                                                T2  B=2     {a,b,c}
                                                T3  C=A+B
                                                ############
                                                  //  ||  \\
                                  -----------------   ||   -----------------
                                  |                   ||                   |
                                  V                   vv                   V
                                                                      T1  A=1
                                                                      T2  B=2     {a,b,c}
                                                                      T3  C=A+B
                                                                      ############
                                                                        //      \\
                                                        -----------------        -----------------
                                                        |                                        |
                                                        V                                        V
                                                    T2 B=2
                                                    T3 C=A+B  {a=1,b,c}
                                                    ############
                                                        |
                                                        |
                                                        V
                                                    T3 C=A+B  {a=1,b=2,c}
                                                    ############
                                                        |
                                                        |
                                                        V
                                                    {a=1,b=2,c=3}   termination
    ###############################
    ## COMPLETETER AVEC LA PHOTO ##
    ###############################

  - Stream
    - list with unbound tail
    - L = 1|2|L2
      L2 = 3|4|L3     [communication channel
      L3 = 5|6|L4
          ...

    %Stream
    %List xith unbound tail
    declare L1 L2 in
    L1=1|2|3|L2
    {Browse L1}

    declare L3 in
    L2=4|5|6|L3

    %Display elements of a Stream
    declare
    proc {Disp S}
      case S of E|S2 then
        {Browse E}
        {Disp S2}
      [] nil then
        skip
      end
    end

    {Disp L1}
