{"version":3,"sources":["webpack:///webpack/bootstrap 5c9e7230e2a78c69ebac","webpack:///./app/src/cli/main.ts","webpack:///external \"child_process\"","webpack:///external \"path\""],"names":[],"mappings":"0BACA,cAMA,IACA,iBAGA,mBACA,CACA,IACA,aAIA,mCAGA,aAGA,OACA,OAIA,OAzBA,YA4BA,MAGA,uBACA,GACA,kCACA,CACA,gBACA,cAGA,OAGA,iBACA,YACA,qBAA2B,UAA0B,UACrD,YAAiC,CAAe,QAChD,EAEA,aADA,QAIA,mBAAsD,wCAA+D,SAGrH,MAGA,4FC7DA,UACA,OAEA,GAAU,EAAU,QAAK,KAAM,MAI/B,GAAa,EAAkB,CAAX,GAAO,OAAW,EAAG,GACzC,KAAoB,EAAU,EAAO,EAAQ,QAAQ,QAAgB,SACrE,GAAY,qCAET,qBAEH,GAAS,mBAAe,QAEwC,KAChE,MAGc,0BAAM,MAAO,OAAO,IAAE,CAGnC,qBCtBD,kB,8BCAA,kB","file":"cli.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5c9e7230e2a78c69ebac","import * as ChildProcess from 'child_process'\nimport * as Path from 'path'\n\nconst args = process.argv.slice(2)\n\n// At some point we may have other command line options, but for now we assume\n// the first arg is the path to open.\nconst pathArg = args.length > 0 ? args[0] : null\nconst repositoryPath = pathArg ? Path.resolve(process.cwd(), pathArg) : ''\nconst url = `x-github-client://openLocalRepo/${encodeURIComponent(\n  repositoryPath\n)}`\n\nconst env = { ...process.env }\n// NB: We're gonna launch Desktop and we definitely don't want to carry over\n// `ELECTRON_RUN_AS_NODE`. This seems to only happen on Windows.\ndelete env['ELECTRON_RUN_AS_NODE']\n\nif (__DARWIN__) {\n  ChildProcess.spawn('open', [url], { env })\n} else if (__WIN32__) {\n  ChildProcess.spawn('cmd', ['/c', 'start', url], { env })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/src/cli/main.ts","module.exports = require(\"child_process\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"child_process\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}